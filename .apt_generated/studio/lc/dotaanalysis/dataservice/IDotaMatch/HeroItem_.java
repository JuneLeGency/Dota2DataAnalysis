//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package studio.lc.dotaanalysis.dataservice.IDotaMatch;

import android.app.Activity;
import android.content.Context;
import android.os.Handler;
import android.util.Log;
import android.widget.ImageView;
import android.widget.TextView;
import com.googlecode.androidannotations.api.BackgroundExecutor;
import studio.lc.dotaanalysis.R.id;
import studio.lc.dotaanalysis.R.layout;
import studio.lc.dotaanalysis.dataservice.IDotaMatch.dataBean.DotaPlayer;
import studio.lc.dotaanalysis.dataservice.ISteamUser.PlayerFinderImpl_;
import studio.lc.dotaanalysis.dataservice.ISteamUser.dataBean.Player;


/**
 * We use @SuppressWarning here because our java code
 * generator doesn't know that there is no need
 * to import OnXXXListeners from View as we already
 * are in a View.
 * 
 */
@SuppressWarnings("unused")
public final class HeroItem_
    extends HeroItem
{

    private Context context_;
    private boolean mAlreadyInflated_ = false;
    private Handler handler_ = new Handler();

    public HeroItem_(Context context) {
        super(context);
        init_();
    }

    private void init_() {
        context_ = getContext();
        if (context_ instanceof Activity) {
            Activity activity = ((Activity) context_);
        }
        playerFinder = PlayerFinderImpl_.getInstance_(context_);
    }

    private void afterSetContentView_() {
        friendlattime = ((TextView) findViewById(id.friendlattime));
        status = ((TextView) findViewById(id.status));
        playername = ((TextView) findViewById(id.playername));
        heropic = ((ImageView) findViewById(id.heropic));
        ((PlayerFinderImpl_) playerFinder).afterSetContentView_();
    }

    /**
     * The mAlreadyInflated_ hack is needed because of an Android bug
     * which leads to infinite calls of onFinishInflate()
     * when inflating a layout with a parent and using
     * the <merge /> tag.
     * 
     */
    @Override
    public void onFinishInflate() {
        if (!mAlreadyInflated_) {
            mAlreadyInflated_ = true;
            inflate(getContext(), layout.lv_player, this);
            afterSetContentView_();
        }
        super.onFinishInflate();
    }

    public static HeroItem build(Context context) {
        HeroItem_ instance = new HeroItem_(context);
        instance.onFinishInflate();
        return instance;
    }

    @Override
    public void setData(final Player player) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    HeroItem_.super.setData(player);
                } catch (RuntimeException e) {
                    Log.e("HeroItem_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void getplayername(final DotaPlayer dotaPlayer) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    HeroItem_.super.getplayername(dotaPlayer);
                } catch (RuntimeException e) {
                    Log.e("HeroItem_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

}
